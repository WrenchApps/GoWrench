version: 1

service:
  name: "{{SERVICE_NAME}}"
  version: 1.0.0

# tokenCredentials:
#   - id: auth_client
#     type: clientCredentials
#     authEndpoint: "{{KEYCLOCK_AUTH_ENDPOINT}}"
#     clientId: "{{KEYCLOCK_AUTH_CLIENT_ID}}"
#     clientSecret: "{{KEYCLOCK_AUTH_CLIENT_SECRET}}"

api:
  endpoints:
    - route: /api/mock
      method: post
      actionId: post_customer_mock

    - route: /api/customer
      method: get
      actionId: get_customer

    - route: /api/customer
      method: post
      actionId: post_customer
      
    - route: /api/hellos
      method: get
      actionId: get_hello

actions:
  - id: post_customer_mock
    type: httpRequestMock
    http:
      mock:
        # body: "{ 'Say':'Hello', 'observation': 'Will work' }"
        mirrorBody: true
        contentType: "application/json"
        statusCode: 201
        headers: 
          "mock1": "value1"
          "mock2": "value2"
          "mock3": "value2"

  - id: get_customer
    type: httpRequest
    http:
      request:
        method: post
        url: 'http://localhost:{{PORT}}/api/mock'
        mapRequestHeaders:
          - "mock1"
          - "mock2:change2"
        mapFixedHeaders:
          "req1": "value1"
          "req2": "value2"
      response:
        mapResponseHeaders:
          - "mock1"
          - "mock2:change2"
        mapFixedHeaders:
          "resp1": "value1"
          "resp2": "value2"

  - id: post_customer
    type: httpRequest
    trigger:
      before:
        contractMapId: before_customer_create
      after:
        contractMapId: after_customer_create
    http:
      request:
        method: post
        url: 'http://localhost:{{PORT}}/api/mock'

  - id: get_hello
    type: httpRequest
    http:
      request:
        method: get
        # tokenCredentialId: auth_client
        url: 'http://localhost:5250/hello'

        
contract:
  maps:
  - id: before_customer_create
    sequence:
    - new
    - rename
    - duplicate
    - remove
    duplicate:
    - "newId:test.newId"
    rename:
    - "name:name2"
    - "address.district:address.district2"
    - "phoneNumber:phone.number"
    - "document.value:documentNumber"
    - "id:newId"
    new:
    - "id:{{uuid}}"
    - "created:{{time 2006-02-01 15:04:05}}"
    - "phone.type:mobile"
    - "partnerKey:{{wrenchContext.request.headers.x-partner-key}}"
    remove:
    - "document"
    
  - id: after_customer_create
    remove:
    - "uncleName"
